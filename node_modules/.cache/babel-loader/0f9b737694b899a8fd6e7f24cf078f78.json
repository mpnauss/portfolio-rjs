{"ast":null,"code":"var _jsxFileName = \"/Users/margaret.farron/Documents/portfolio-react/portfolio-avanade/src/components/SlideShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Slide from './Slide.js'; //If slide index == focused, add .slide-focused to slide class list. \n//If slide index == focused-1 add .slide-prev to slide class list\n//if slide index == focused+1 add .slide-next to slide class list\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SlideShow = props => {\n  _s();\n\n  const [focused, setFocused] = useState(0);\n\n  function determineFocus(slideIndex) {\n    let idSelection;\n\n    if (slideIndex === focused) {\n      idSelection = 'focused';\n    } else if (slideIndex === focused - 1) {\n      idSelection = 'prev';\n    } else if (slideIndex === focused + 1) {\n      idSelection = 'next';\n    } else {\n      idSelection = '';\n    }\n\n    return idSelection;\n  }\n\n  console.log(props.data.length);\n\n  const prevClick = event => {\n    if (focused > 0) {\n      setFocused(focused - 1);\n    } else {\n      setFocused(props.data.length - 1);\n    }\n  };\n\n  const nextClick = event => {\n    if (focused < props.data.length - 1) {\n      setFocused(focused + 1);\n    } else {\n      setFocused(0);\n    }\n  };\n\n  const content = props.data;\n  const contentMap = content.map((slide, index) => {\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      data: slide,\n      index: index,\n      idName: determineFocus(index)\n    }, slide.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-width-mod\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-container\",\n        children: contentMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), \")\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: prevClick,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }, this), \" / \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: nextClick,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlideShow, \"BRqfCtzFEUZ/t3qVOOXxC3dfYPc=\");\n\n_c = SlideShow;\nexport default SlideShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideShow\");","map":{"version":3,"sources":["/Users/margaret.farron/Documents/portfolio-react/portfolio-avanade/src/components/SlideShow.js"],"names":["React","useState","Slide","SlideShow","props","focused","setFocused","determineFocus","slideIndex","idSelection","console","log","data","length","prevClick","event","nextClick","content","contentMap","map","slide","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CAEA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC;;AAEA,WAASM,cAAT,CAAwBC,UAAxB,EAAoC;AAClC,QAAIC,WAAJ;;AACA,QAAID,UAAU,KAAKH,OAAnB,EAA4B;AAC1BI,MAAAA,WAAW,GAAG,SAAd;AACD,KAFD,MAEO,IAAID,UAAU,KAAKH,OAAO,GAAG,CAA7B,EAAgC;AACrCI,MAAAA,WAAW,GAAG,MAAd;AACD,KAFM,MAEA,IAAID,UAAU,KAAKH,OAAO,GAAG,CAA7B,EAAgC;AACrCI,MAAAA,WAAW,GAAG,MAAd;AACD,KAFM,MAEA;AACLA,MAAAA,WAAW,GAAG,EAAd;AACD;;AACD,WAAOA,WAAP;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,IAAN,CAAWC,MAAvB;;AAEA,QAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAIV,OAAO,GAAG,CAAd,EAAiB;AACfC,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU,CAACF,KAAK,CAACQ,IAAN,CAAWC,MAAX,GAAoB,CAArB,CAAV;AACD;AACF,GAND;;AAQA,QAAMG,SAAS,GAAGD,KAAK,IAAI;AACzB,QAAIV,OAAO,GAAGD,KAAK,CAACQ,IAAN,CAAWC,MAAX,GAAoB,CAAlC,EAAqC;AACnCP,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD;AACF,GAND;;AAQA,QAAMW,OAAO,GAAGb,KAAK,CAACQ,IAAtB;AACA,QAAMM,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/C,wBAAQ,QAAC,KAAD;AACN,MAAA,IAAI,EAAED,KADA;AAGN,MAAA,KAAK,EAAEC,KAHD;AAIN,MAAA,MAAM,EAAEd,cAAc,CAACc,KAAD;AAJhB,OAEDD,KAAK,CAACE,EAFL;AAAA;AAAA;AAAA;AAAA,YAAR;AAMD,GAPkB,CAAnB;AASA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,oBAME;AAAA,8BAAK;AAAM,QAAA,OAAO,EAAEJ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,sBAA6C;AAAM,QAAA,OAAO,EAAEE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvDD;;GAAMb,S;;KAAAA,S;AAyDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Slide from './Slide.js';\n\n//If slide index == focused, add .slide-focused to slide class list. \n//If slide index == focused-1 add .slide-prev to slide class list\n//if slide index == focused+1 add .slide-next to slide class list\n\nconst SlideShow = (props) => {\n  const [focused, setFocused] = useState(0)\n\n  function determineFocus(slideIndex) {\n    let idSelection;\n    if (slideIndex === focused) {\n      idSelection = 'focused'\n    } else if (slideIndex === focused - 1) {\n      idSelection = 'prev'\n    } else if (slideIndex === focused + 1) {\n      idSelection = 'next'\n    } else {\n      idSelection = '';\n    }\n    return idSelection;\n  }\n\n  console.log(props.data.length)\n\n  const prevClick = event => {\n    if (focused > 0) {\n      setFocused(focused - 1)\n    } else {\n      setFocused(props.data.length - 1)\n    }\n  }\n\n  const nextClick = event => {\n    if (focused < props.data.length - 1) {\n      setFocused(focused + 1)\n    } else {\n      setFocused(0)\n    }\n  }\n\n  const content = props.data\n  const contentMap = content.map((slide, index) => {\n    return (<Slide\n      data={slide}\n      key={slide.id}\n      index={index}\n      idName={determineFocus(index)}\n    />)\n  })\n\n  return (\n    <div>\n      <div className=\"full-width-mod\">\n        <div className=\"slide-container\">\n          {contentMap}\n        </div>\n      </div>)\n      <div><span onClick={prevClick}>Prev</span> / <span onClick={nextClick}>Next</span></div>\n    </div>\n  )\n}\n\nexport default SlideShow"]},"metadata":{},"sourceType":"module"}