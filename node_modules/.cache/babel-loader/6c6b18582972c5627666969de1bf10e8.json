{"ast":null,"code":"var _jsxFileName = \"/Users/margaret.farron/Documents/portfolio-react/portfolio-avanade/src/components/SlideShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Slide from './Slide.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SlideShow = props => {\n  _s();\n\n  const [focused, setFocused] = useState([0]);\n  console.log(focused);\n  const content = props.data;\n  const contentMap = content.map((slide, index) => {\n    let isFocused;\n\n    if (focused == index) {\n      isFocused = true;\n    } else {\n      isFocused = false;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Slide, {\n      data: slide,\n      index: index,\n      isFocused: isFocused\n    }, slide.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-width-mod\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slide-container\",\n      children: contentMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SlideShow, \"ujKcXEWflhZA4+ELERgfS80HfCc=\");\n\n_c = SlideShow;\nexport default SlideShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideShow\");","map":{"version":3,"sources":["/Users/margaret.farron/Documents/portfolio-react/portfolio-avanade/src/components/SlideShow.js"],"names":["React","useState","Slide","SlideShow","props","focused","setFocused","console","log","content","data","contentMap","map","slide","index","isFocused","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAtC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,QAAMI,OAAO,GAAGL,KAAK,CAACM,IAAtB;AACA,QAAMC,UAAU,GAAGF,OAAO,CAACG,GAAR,CAAY,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC/C,QAAIC,SAAJ;;AACA,QAAIV,OAAO,IAAIS,KAAf,EAAsB;AACpBC,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,GAAG,KAAZ;AACD;;AACD,wBAAQ,QAAC,KAAD;AACN,MAAA,IAAI,EAAEF,KADA;AAGN,MAAA,KAAK,EAAEC,KAHD;AAIN,MAAA,SAAS,EAAEC;AAJL,OAEDF,KAAK,CAACG,EAFL;AAAA;AAAA;AAAA;AAAA,YAAR;AAMD,GAbkB,CAAnB;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BD;;GAAMR,S;;KAAAA,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport Slide from './Slide.js';\n\nconst SlideShow = (props) => {\n  const [focused, setFocused] = useState([0]) \n\n  console.log(focused)\n\n  const content = props.data\n  const contentMap = content.map((slide, index) => {\n    let isFocused;\n    if (focused == index) {\n      isFocused = true;\n    } else {\n      isFocused = false;\n    }\n    return (<Slide\n      data={slide}\n      key={slide.id}\n      index={index}\n      isFocused={isFocused}\n    />)\n  })\n\n  return (\n    <div className=\"full-width-mod\">\n      <div className=\"slide-container\">\n        {contentMap}\n      </div>\n    </div>)\n}\n\nexport default SlideShow"]},"metadata":{},"sourceType":"module"}